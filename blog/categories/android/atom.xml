<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | The Weight]]></title>
  <link href="http://note.n6e.be/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://note.n6e.be/"/>
  <updated>2016-02-03T16:36:04+09:00</updated>
  <id>http://note.n6e.be/</id>
  <author>
    <name><![CDATA[Takuo Kitame]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Qualcomm IZat のメモリリーク]]></title>
    <link href="http://note.n6e.be/blog/2015/08/24/qualcomm-izat-memory-leak/"/>
    <updated>2015-08-24T23:40:00+09:00</updated>
    <id>http://note.n6e.be/blog/2015/08/24/qualcomm-izat-memory-leak</id>
    <content type="html"><![CDATA[<p><a href="/assets/screenshot/QualcommIZat.png" target="_blank"><img class="right" src="/assets/screenshot/QualcommIZat.png" width="240" height="230"></a>
QualcommのSoCにIZatというテクノロジーがあって、これは位置情報の効率化を図るハードウェア支援だそうです。<br/>
au版のXperia Z3ではこれを有効化できるのですが、どうやらメモリリークが存在するようでした。</p>

<!-- more -->


<p>IZatを有効化するとlowi-serverというのが働き出してどんどんメモリを食っていきます。<br/>
<img src="/assets/screenshot/lowi-server.png" width="640" height="601">
こんな感じです。<br/>
6日間で366MBになっています。</p>

<p>この状態だとあらゆるバックグラウンドアクティビティはシステムによってkillされまくり、ウェブブラウザもホームに戻る度にロードし直しで不快極まりないです。<br/>
通知を握りつぶされることもままあります。</p>

<p>しかもこいつはシステムプロセスなので、root権がなくてはkillすることもできず、こうなってしまったら端末を再起動するしかありません。</p>

<p>ちなみにlogcatしているとなにやら延々とエラーがでていますがよくわかりません。<br/>
<code>text logcat
W/LOWI-SERVER(  485): [LOWIController] Error in getting response from cache
W/LOWI-SERVER(  485): [LOWIScanResultReceiver] No result, due to terminate or no memory
</code></p>

<p>というわけで、こんなもんは使わないほうが良いです。<br/>
さっさとOFFにして再起動しましょう。(ちなみにデフォルトOFFです)<br/>
OFFであれば0.3MB程度しか消費しません。</p>

<p>docomoやソフトバンクのZ3ではそもそも有効化できないので心配いりません。Z4は知りませんが。</p>

<p>現場からは以上です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CyanogenMod で DTCP-IP やパズドラを動かす]]></title>
    <link href="http://note.n6e.be/blog/2013/07/11/cyanogenmod-dtcp-ip/"/>
    <updated>2013-07-11T23:49:00+09:00</updated>
    <id>http://note.n6e.be/blog/2013/07/11/cyanogenmod-dtcp-ip</id>
    <content type="html"><![CDATA[<p>CyanogenMod でもパズドラを起動したいとです！！！</p>

<!-- more -->


<p>というわけなんですが、パズドラとかどうでもよくて TwonkyBeam の DTCP-IP を使いたいというが目的で調べました。<br/>
要するに root チェックにより CyanogenMod のようなカスタムROMでは使用できないアプリを動かすというやつです。</p>

<p>インターネットで調べると以下のような項目でroot端末かどうかをチェックしているようです。</p>

<ul>
<li><strong>su バイナリの存在</strong> /system/{bin,xbin}, /sbin あたりにsu があるとダメなようです</li>
<li><strong>/system/app/Superuser.apk の存在</strong> (CyanogenModにはないですがリネームすればいいだけです)</li>
<li><strong>getprop <em>ro.secure</em> の値が0だとNG</strong> (CyanogenModでは1なので問題ないです)</li>
<li><strong>getprop <em>ro.debuggable</em> の値が1だとNG</strong> (CyanogenModでは1なので対策が必要です)</li>
</ul>


<p><strong>su のバイナリ</strong> は <em>/system/bin/su</em>, <em>/system/xbin/su</em> にあるので適当にリネームして回避出来ますが、リネームしっぱなしだと root が必要なアプリを実行するときにこまるのでこんなスクリプトを書いてみました。</p>

<p>まずシステムの起動時に実行される <em>/data/local/userinit.sh</em> で <strong>su</strong> を <strong>sux</strong> にリネームして隠します。
``` bash /data/local/userinit.sh</p>

<h1>!/system/bin/sh</h1>

<p>mount -o remount,rw /system</p>

<p>#</p>

<h1>su を退避 symlinkの場合は無視</h1>

<p>if [ -x /system/bin/su -a ! -L /system/bin/su ]; then</p>

<pre><code>mv /system/bin/su /system/bin/sux
</code></pre>

<p>fi
if [ -x /system/xbin/su -a ! -L /system/xbin/su ]; then</p>

<pre><code>mv /system/xbin/su /system/xbin/sux
</code></pre>

<p>fi</p>

<p>mount -o remount,ro /system
```</p>

<p>次に su があれば削除し、なければ sux から symlink を貼るというようなスクリプトです。
``` bash /data/local/swsu.sh</p>

<h1>!/system/bin/sh</h1>

<h1>rootじゃない場合sux使ってrootになる</h1>

<p>if [ <code>whoami</code> != &ldquo;root&rdquo; ]; then
  sux -c $0
  exit
fi</p>

<p>mount -o remount,rw /system</p>

<p>if [ ! -L /system/xbin/su ]; then
  ln -s /system/xbin/sux /system/xbin/su
  ln -s /system/bin/sux /system/bin/su
  echo &ldquo;enable su&rdquo;
else
  rm -f /system/xbin/su
  rm -f /system/bin/su
  echo &ldquo;disable su&rdquo;
fi</p>

<p>mount -o remount,ro /system
```</p>

<p>どちらも配置したら <strong>chmod 0755</strong> するのを忘れずに。</p>

<p>ひとまずこれで再起動してみて試します。<br/>
<strong>/data/local/swsu.sh</strong> は <a href="https://play.google.com/store/apps/details?id=com.ryo.commandRunner">CommandRunner</a> とかで起動したら良いでしょう。<br/>
ショートカットも作れるので便利です。<br/>
実行してみて su の存在をトグルできるようになってればOKです。<br/>
※ root をトグルするアプリも存在しますが、挙動を把握しやすくするため今回は自分でスクリプト書きました。</p>

<p>さて、次に <strong>getprop</strong> の値。まず <strong>/default.prop</strong> の値が云々的な説明をしているサイトがありますが間違いです。<br/>
目的のプロパティは <strong>boot.img</strong> の中、 <strong>initrd.img</strong> にある <strong>default.prop</strong> により設定されてます。(んでその initrd が / にマウントされる)<br/>
そんなわけで <strong>boot.img</strong> をいじる必要があります。結構めんどいです。</p>

<p>まず <strong>boot.img</strong> を <em>update.zip</em> から取り出しておきます。<br/>
<strong>boot.img</strong> の展開と再構築には Linux上で <em>abootimg</em> を使いますが、WindowsやMacでもなんとかする方法はあると思いますので頑張って。</p>

<p><code>bash terminal
$ sudo apt-get install abootimg unzip
$ wget http://get.cm/get/jenkins/34073/cm-10.1.1-grouper.zip
$ mkdir bootimg
$ cd bootimg
$ unzip ../cm-10.1.1-grouper.zip boot.img
$ abootimg -x boot.img
$ mkdir initrd
$ cd initrd
$ zcat ../initrd.img | cpio -i
$ sed -e 's/ro.debuggable=1/ro.debuggable=0/g' default.prop &gt; default.prop.new
$ mv default.prop.new default.prop
$ find . | cpio -o -H newq | gzip &gt; ../initrd.img
$ cd ..
$ abootimg --create newboot.img -k zImage -r initrd.img
</code></p>

<p>で、<strong>newboot.img</strong> ができたらひとまず <em>fastboot</em> から起動してみます。<br/>
``` bash terminal
$ adb reboot bootloader
$ sudo fastboot boot newboot.img
$ adb shell</p>

<p>shell@android:/ $ getprop ro.debuggable
0
shell@android:/ $
```</p>

<p>これでパズドラは起動しますし、TwonkyBeam で DTCP-IP が使えるようになりました。<br/>
nasneで録画した動画やライブチューナでテレビも見られます！</p>

<p>しかしまだ終わりません。先ほどの <strong>swsu.sh</strong> を実行してみます。<br/>
動きませんね。<br/>
この状態だと su (sux) が動かないことに気が付きます。<br/>
なぜか確認なしにsuが拒否されてしまうのです。
logcat には次のように出力されています。
<code>text terminal
W/su      ( 8151): request rejected (10097-&gt;0 /system/bin/sh) F8?HO?
D/su      ( 8147): su invoked.
D/su      ( 8149): access_disabled
E/su      ( 8148): Root access is disabled on non-debug builds
</code></p>

<p>なるほど。<br/>
実は CyanogenMod で提供している su は変更が加えてあり、 <em>ro.debuggable=0</em> では無条件に拒否するようになっています。</p>

<p>しかし、<a href="https://github.com/CyanogenMod/Superuser/blob/379371bcff3f18b4a16beb37a35c2b211a941781/Superuser/jni/su/su.c#L548">ソース</a>をみてみると、runtime に <strong>/default.prop</strong> を見ているだけのようなので、システムが起動した後に <strong>/default.prop</strong> を書き換えてやればよさそうです。<br/>
でも、あれ？？？<br/>
でも起動したら su 使えないし書き換えられないんじゃ？<br/>
はい。そうです。そこで先ほどの <strong>userinit.sh</strong> に追記します。 <strong>userinit.sh</strong> は root権限で動きますからね。</p>

<p>普通に再起動して以下を<strong>追記</strong>した <strong>userinit.sh</strong> を改めて <strong>/data/local/userinit.sh</strong> へ置きます。 <strong>chmod 0755</strong> を忘れずに。(recovery で adb が使えれば recovery で作業してもいいです)</p>

<p>``` bash /data/local/userinit.sh(抜粋)
#</p>

<h1>/default.prop書換え</h1>

<p>mount -o remount,rw /
sed -e &rsquo;s/ro.debuggable=0/ro.debuggable=1/g' /default.prop > /default.prop.tmp
mv /default.prop.tmp /default.prop
chmod 0644 /default.prop
mount -o remount,ro /
```</p>

<p>これでもう一度 fastboot boot newboot.img して確認してみましょう。</p>

<p><code>bash terminal
$ adb reboot bootloader
$ sudo fastboot boot newboot.img
$ adb shell
shel@android:/ $ getprop ro.debuggable
0
shell@android:/ $ sux
shell@android:/ #
</code></p>

<p>うまく行きました。<br/>
満を持して newboot.img を fastboot で flash しましょう。
<code>bash terminal
$ adb reboot bootloader
$ sudo fastboot flash boot newboot.img
</code></p>

<p>そんなわけで、/data/local/ は wipe しない限り維持できますから、今後はアップデートするときに boot.img を改変するだけでよくなります。<br/>
boot.img の改変は面倒ですが、手順は決まっているしスクリプトにすれば自動化はできるかと思います。<br/>
(というか前述の手順がスクリプトそのものっぽい)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xperia（TM）ワールド タッチ＆トライ ブロガーミーティングに参加しました(先月)]]></title>
    <link href="http://note.n6e.be/blog/2013/02/14/xperia-world-touch-try/"/>
    <updated>2013-02-14T20:23:00+09:00</updated>
    <id>http://note.n6e.be/blog/2013/02/14/xperia-world-touch-try</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://farm9.staticflickr.com/8092/8407636657_dd10cb17a9_n_d.jpg">http://farm9.staticflickr.com/8092/8407636657_dd10cb17a9_n_d.jpg</a>">
明けましておめでとう御座います。<br/>
もうXperia Zが発売して約一週間が過ぎ、先月のことになってしまいましたがXperia (主にXperia Z)のタッチ＆トライイベントに参加してきましたのでリポートです。</p>

<!-- more -->


<p>イベント自体はコジャレた場所で開催され、軽食もあり、試用端末も一人一台ずつ渡してくれて大変好印象でした。<br/>
肝心のデバイスの方ですが、ぶっちゃけそんなに興味惹かれることはありませんでした。<br/>
というのも、僕はすでに同グレードにあたる5インチフルHD端末機 HTC J butterfly(HTL21)を所有していて、それとの比較をすると大して抜きん出た部分がなかったからです。<br/>
それとXperia Tablet Zのほうはそもそもタブレットにあまり興味がなかったのでほぼスルー気味でしたが、筐体の薄さだけは確認してきました。</p>

<p>さて実際の比較ポイントなんですが、中身はAndroid 4.1なんでほぼ同じ、カタログスペックでのハードウェア性能もだいたい同じ、UIがXperiaかHTCかの違い程度くらいしかと思います。大雑把ですが…。<br/>
どっちを買えばいいかと言われたら「どっちでもいい、見た感じで」と言えるレベル。</p>

<p>たとえば、カメラのモードレスUIとか、動画撮影中にも静止画を撮影可能と自信ありげに説明いただきましたが、HTL21でも同様です。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8225/8409288889_bd74d8d0e3_d.jpg">http://farm9.staticflickr.com/8225/8409288889_bd74d8d0e3_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409288889/in/set-72157632598441208&#34;>http://www.flickr.com/photos/xnortheye/8409288889/in/set-72157632598441208</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409288889/in/set-72157632598441208&#34;>http://www.flickr.com/photos/xnortheye/8409288889/in/set-72157632598441208</a>"></p>

<p>画素数ではXperiaのほうが13Mなのでだいぶ上ですね。<br/>
カメラの起動の速さではHTL21のほうが速かったですが、初回以降はあまりそこまで変わりませんでした。<br/>
ちなみに近くにあったオブジェを撮影したものがこちら。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8360/8409289141_3fa539be9c_n_d.jpg">http://farm9.staticflickr.com/8360/8409289141_3fa539be9c_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409289141/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409289141/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409289141/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409289141/in/set-72157632598441208/</a>"></p>

<p>あ、ステータスバーのプルダウンに各種トグルスイッチがあるのはまぁ便利ですね。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8323/8410384660_60f614e20a_d.jpg">http://farm9.staticflickr.com/8323/8410384660_60f614e20a_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8410384660/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8410384660/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8410384660/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8410384660/in/set-72157632598441208/</a>"></p>

<p>POBoxのキーボードはリサイズできるようになったようです。<br/>
僕はATOKつかってるんですがこちらもリサイズ可能ですがPOBoxのほうが柔軟にリサイズデキルような気がしました。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8091/8409288943_f60d8de72f_n_d.jpg">http://farm9.staticflickr.com/8091/8409288943_f60d8de72f_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409288943/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409288943/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409288943/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409288943/in/set-72157632598441208/</a>"></p>

<p>その他僕がまず気にする部分は /proc/meminfo の情報です。ユーザーが利用できるメモリ量はここで決まります。<br/>
Xperiaは MemTotal 1.8GB程度、HTL21は1.6GBなので、どっちがいいって言えばそりゃXperiaですが、1.5GBを超えると2.0GBまではまぁ誤差でいいかなとか思ってしまいます。<br/>
だいたいいつも400MBくらいは空いてるから。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8079/8409289003_cd6bae1c2c_d.jpg">http://farm9.staticflickr.com/8079/8409289003_cd6bae1c2c_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409289003/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409289003/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8409289003/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8409289003/in/set-72157632598441208/</a>"></p>

<p>次に気になるのがタッチイベントを何点拾えるか…なんですが今時はだいたいどれも10点いけるので最早どうでもよくなりました。<br/>
実際XperiaもHTL21も10点いけます。初代Xperiaは1点だったのでひどかったですね。</p>

<p>続いて筐体の大きさ具合。<br/>
これも誤差レベルの違いしかないかなぁ…と思いますです。<br/>
Xperiaはイヤホン端子に蓋があるが、HTL21にはありません。<br/>
HTL21のUSB蓋は取れやすい(が、アロンアルファで接着しなおせば取れない)が、Xperiaのほうはそうそう取れないと思います。(IS12Sでの感想)<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8361/8408732254_8b6cb18cf9_n_d.jpg">http://farm9.staticflickr.com/8361/8408732254_8b6cb18cf9_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8408732254/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8408732254/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8408732254/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8408732254/in/set-72157632598441208/</a>"><br/>
 (左Xperia Z,右HTL21)</p>

<p><img class="<a" src="href="http://farm9.staticflickr.com/8507/8407630125_fa4179ea99_n_d.jpg">http://farm9.staticflickr.com/8507/8407630125_fa4179ea99_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407630125/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407630125/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407630125/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407630125/in/set-72157632598441208/</a>"><br/>
 HTL21は裏面が湾曲しているので端が浮いてます。最薄部分ではHTL21のほうが薄いかな。</p>

<p>ストラップホールがついているのは日本ではプラスポイントかもしれませんね。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8373/8407616023_2e3d7f8819_n_d.jpg">http://farm9.staticflickr.com/8373/8407616023_2e3d7f8819_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407616023/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407616023/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407616023/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407616023/in/set-72157632598441208/</a>"></p>

<p>最後に、Xperia Tablet Zの薄さはまぁ薄かったです。<br/>
でも解像度、2560x1600のNexus10があることを考えると全く惹かれませんし、どう考えてもNexus10買ったほうがいいですね。<br/>
<img class="<a" src="href="http://farm9.staticflickr.com/8232/8407617267_a0ea5142e7_n_d.jpg">http://farm9.staticflickr.com/8232/8407617267_a0ea5142e7_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407617267/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407617267/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407617267/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407617267/in/set-72157632598441208/</a>">
<img class="<a" src="href="http://farm9.staticflickr.com/8473/8407617961_563868cafb_n_d.jpg">http://farm9.staticflickr.com/8473/8407617961_563868cafb_n_d.jpg</a>" title="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407617961/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407617961/in/set-72157632598441208/</a>" alt="<a href=&#34;http://www.flickr.com/photos/xnortheye/8407617961/in/set-72157632598441208/&#34;>http://www.flickr.com/photos/xnortheye/8407617961/in/set-72157632598441208/</a>"></p>

<p>おみやげにXperia缶バッジと<a href="http://pur.store.sony.jp/Qnavi/Product/CP-F1LSVP/">モバイルバッテリー</a>を頂きました。<br/>
その他全ての写真は<a href="http://www.flickr.com/photos/xnortheye/sets/72157632598441208/">flickr</a>に。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[twicca - Evernote プラグイン 1.7.0 release]]></title>
    <link href="http://note.n6e.be/blog/2012/10/16/twicca-evernote-plugin-1-7-0-release/"/>
    <updated>2012-10-16T23:46:00+09:00</updated>
    <id>http://note.n6e.be/blog/2012/10/16/twicca-evernote-plugin-1-7-0-release</id>
    <content type="html"><![CDATA[<p><a href="https://play.google.com/store/apps/details?id=jp.takuo.android.twicca.plugin.evernote">twicca &ndash; Evernote プラグイン</a> 1.7.0 をリリースしました。<br/>
2012/11 よりパスワード認証でのサービス提供が終了することに伴い、Evernoteサービスの認証にOAuthを使うようになりました。</p>

<!-- more -->


<p>認証手順で若干の不具合があり、ブラウザでOAuth認証した後設定画面に戻るのですが、そこからさらにブラウザが立ち上がってしまいます。
認証自体は正常に終了していますのでそのままブラウザを終了して問題ありません。</p>

<p>Evernote SDKでのintent処理に問題がある気がしていますが、試行錯誤したものの修正できなかったのでとりあえずこの状態でのリリースになっています。<br/>
後ほどSDKを使わないでOAuthを処理する方法を試し修正していきたいと思います。</p>

<p>※ SDKサイズが増えAPKのサイズも増大してしまいました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IS12Sのswap]]></title>
    <link href="http://note.n6e.be/blog/2012/09/21/is12s-swap/"/>
    <updated>2012-09-21T01:01:00+09:00</updated>
    <id>http://note.n6e.be/blog/2012/09/21/is12s-swap</id>
    <content type="html"><![CDATA[<p>前回のエントリでIS12Sでswapだわーいって嬉々として書いたのだが、vm.swappiness=60だとはっきりいって使いものにならないということをこの1ヶ月ほどで体感してきた。</p>

<p>というわけで、vm.swappiness=20 くらいがよいと思います。</p>
]]></content>
  </entry>
  
</feed>
