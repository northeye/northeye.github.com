<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: network | The Weight @northeye]]></title>
  <link href="http://note.n6e.be//blog/categories/network/atom.xml" rel="self"/>
  <link href="http://note.n6e.be//"/>
  <updated>2015-01-09T18:37:40+09:00</updated>
  <id>http://note.n6e.be//</id>
  <author>
    <name><![CDATA[Takuo Kitame]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ドメイン名が変わりました]]></title>
    <link href="http://note.n6e.be//blog/2015/01/09/domain-name-changed/"/>
    <updated>2015-01-09T20:52:00+09:00</updated>
    <id>http://note.n6e.be//blog/2015/01/09/domain-name-changed</id>
    <content type="html"><![CDATA[<p><img class="right" src="/assets/screenshot/aws-domain-name-registration.png">
ドメインを変更することになりました。<br/>
新しいドメインは n6e.be です。</p>

<!-- more -->


<p>ga.vg ドメインは2文字でそんなに高額でもなく気に入っていたんですが、昨年のいつ頃だったかに .vg ドメインの管理団体が破産したとか何とかで変更になり、
以後の更新料は年間1万円を超えるようになってしまいました。<br/>
さすがに年1万はな〜ってなって変更することにいたしました。</p>

<p>今度も3文字で比較的短いドメインなのですが、やっぱり2文字がよかったなという思いは残ります。</p>

<p>さて、今回ドメイン取得にあたり、AmazonのRoute53サービスを利用してみました。<br/>
ちなみにRoute53はバックエンドレジストラに<a href="http://www.gandi.net">Gandi</a>を利用しているようです。</p>

<p>.be ドメインは $9 で取得でき、他のドメイン販売業者と比べても対して差がありません。<br/>
.jp ドメインも $90 で大きく変わらないのですが、まぁ円安ということもあり、円換算すると少々高くなりますね。</p>

<p>取得自体はAWSのマネジメントコンソールから適当にポチポチやってれば買えます。<br/>
新規ドメインの場合は、自動的にDNSのホスティングもRoute53になります。<br/>
もちろん外のDNSに変更も可能ですが、APIもあるしDDNSもやりやすいだろうと思ってこのまま運用することにしました。<br/>
費用としては $0.5/zoneに加えて10億クエリまでは $0.4 で、だいたい $1/month で運用できていますし、気になる額でもありません。<br/>
<img src="/assets/screenshot/aws-route53-price.png"></p>

<p>DDNSなどに用いるコマンドラインツールは <a href="https://github.com/barnybug/cli53">cli53</a> というPythonツールを使っています。<br/>
<code>bash command line
sudo pip install cli53
</code>
という具合にpipでインストール。<br/>
あとは /etc/ppp/ip-up.d/ddns あたりに適当にかいとけばDDNSできます。</p>

<p>``` bash /etc/ppp/ip-up.d/ddns</p>

<h1>!/bin/sh</h1>

<p>set -e</p>

<p>export AWS_ACCESS_KEY_ID=XXXXXXXXXXXXXXXXXXXXXXXXXXX
export AWS_SECRET_ACCESS_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</p>

<h1>dynamic.n6e.be をTTL 90で登録</h1>

<p>cli53 rrcreate n6e.be dynamic A $PPP_LOCAL &mdash;ttl 90 &mdash;replace
```
便利です。</p>

<p>今後共よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NETGEAR GS116E]]></title>
    <link href="http://note.n6e.be//blog/2014/08/07/netgear-gs116e/"/>
    <updated>2014-08-07T22:01:00+09:00</updated>
    <id>http://note.n6e.be//blog/2014/08/07/netgear-gs116e</id>
    <content type="html"><![CDATA[<p>VLANを切れる安価なスイッチングハブ NETGEAR GS116E を買ってみた。</p>

<p>PPPoEのセグメントとPrivate LANのセグメントで2つのハブを使っていたのだけれど、機材を減らしたいと思いVLAN設定ができる安めのハブを探していたところ、NETGEAR製品くらいしかなさそうだったので16ポートのこいつを選んだ。</p>

<!-- more -->


<p>結論から言えば、家庭用としては大変コストパフォーマンスに優れた機材ではある、しかし若干悪いクセがあるように思えるのでちょっと書いてみる。</p>

<h3>設定ツールはAdobe AIRだけどWebもある</h3>

<p>悪いとこのひとつは設定ツールがAdobe AIRアプリであり、Windows向けにしかないこと。<br/>
まぁこれは一度IPアドレスを設定しちゃえば Web UI が使えるようになるので不要ではあるのだが、初期設定時にether portがついたWindowsマシンがないと詰む。</p>

<p>Web UIはこんな感じで、できることはAIRのアプリと同じ。<br/>
<a href="/assets/screenshot/gs116ev2-web-ui.png" target="_blank"><img class="right" src="/assets/screenshot/gs116ev2-web-ui.png" title="WEB UI" ></a></p>

<p>UI的にVLANの設定は若干わかりにくいかも知れない。</p>

<h3>ポートベースVLANは使うべきではない</h3>

<p>基本ポートベースVLANという機能があるが、これは使いものにならない(と思う)。<br/>
これでVLANを切ってみたらホストによっては
<blockquote><p>br0: received packet on eth1 with own address as source address</p></blockquote>
といったようなログが出るようになり、通信がままならなくなった。<br/>
まぁ素直に802.1QのAdvancedモードを使うように設定すればいいし、これが欠点とはならない。</p>

<h3>謎のパケット破棄ルールがある?</h3>

<p>一番よくない点として、どうも独自の判断でIPパケットを破棄している節がある。<br/>
確認しているのはPPPoEのセッションパケットで、中身のIP DestinationとSourceが同じアドレスのパケットを捨てていた。</p>

<p>そもそもこんなパケットが外に行こうとすることがおかしいといえばおかしいのだが、例を挙げればYAMAHAのRTシリーズのNATはこういう仕様になっていて、<br/>
LAN内やルーター自身から、ルーターのWANアドレス宛に通信しようとするとこういうパケットになり、一旦PPPoEのpeer先へパケットを投げる模様。<br/>
実際に ping の応答に 5msec ほどかかっており、ルーター内部で完結しているとは言いがたいレイテンシになっている。</p>

<p>さて、話を戻してWANアドレスにpingしながら、YAMAHAのルーターをつないだGS116Eのポートをミラーリングしてtcpdumpしているとこんな感じのパケットがきているのが見られる。<br/>
<code>
 PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 1, length 64
 PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 2, length 64
 PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 3, length 64
</code>
このパケットはONUが繋がっている本来流れるべきポートへは流れていかないし(これもミラーリングで確認)、戻ってもいないのでGS116E内で破棄されていると考えられる。</p>

<p>こういうへんなNAT仕様のYAMAHAルーターも大概ではあるけれど、L2スイッチごときがL3の条件でパケットを勝手に捨てるのはいかがなものかと思う。(調べたら過去にIPv6パケットを捨ててるとかいう疑惑があった模様)<br/>
まぁ稀なケースなので我慢することにしたが、いわゆるヘアピンNAT( <a href="http://www.rfc-base.org/txt/rfc-4787.txt">RFC4748</a> )などといわれる機能に頼る環境では注意である。</p>

<h3>総評</h3>

<p>ともあれ、安価でVLAN切れてWeb UIで設定でき、ポートミラーリングでこういったトラブルシューティングができるのはなかなかよいかなと思う。(あくまで家庭用では)</p>

<p>評価: ★★★☆☆</p>

<p></p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00GQL3U2M" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B004LV1SL4" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p></p>
]]></content>
  </entry>
  
</feed>
