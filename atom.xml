<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Weight @northeye]]></title>
  <link href="http://note.n6e.be//atom.xml" rel="self"/>
  <link href="http://note.n6e.be//"/>
  <updated>2015-01-07T16:58:58+09:00</updated>
  <id>http://note.n6e.be//</id>
  <author>
    <name><![CDATA[Takuo Kitame]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Anker 3 Micro USB Cables]]></title>
    <link href="http://note.n6e.be//blog/2014/12/01/anker-3-micro-usb-cables/"/>
    <updated>2014-12-01T22:44:00+09:00</updated>
    <id>http://note.n6e.be//blog/2014/12/01/anker-3-micro-usb-cables</id>
    <content type="html"><![CDATA[<p><img class="right" src="https://lh5.googleusercontent.com/-5_DtA9BE1LQ/VH1j1Pf3N3I/AAAAAAAAUIM/T0rE9Ipyxu8/s288/IMGP1003_1.jpg">
こんにちは。<br/>
本日はお手頃なMicroUSBケーブルのご紹介です。</p>

<!-- more -->


<p>USBで充電する機材が増えてくるとケーブルもそれなりに数を用意する必要も出てきます。<br/>
付属されている純正のケーブルでも良いのですが、充電する場所は一箇所ではないし、ケーブルは充電器の方に挿しっぱなしにしておきたい気持ちもあります。</p>

<p>そんなわけで、お手頃なケーブルを探していた所、<a href="http://www.amazon.co.jp/dp/B00IDTILEW/takuojp02-22/">USB充電器ACアダプタ</a>や<a href="http://www.amazon.co.jp/dp/B00DQ7590A/takuojp02-22/">モバイルバッテリー</a>でおなじみのAnkerから3本セットのよさ気なケーブルが出ていたので買いました。</p>

<p><a href="http://www.amazon.co.jp/dp/B00NAQITHW/takuojp02-22/">Anker【3本セット】 90cm Micro USB ケーブル ハイスピード USB 2.0 Aオス型-B同期 充電用ケーブル</a></p>

<p><a href="https://picasaweb.google.com/lh/photo/iiN96pA4hiE5DvOnonYoFHZWRChvnQd215ra2-hbqbQ?feat=embedwebsite" target="_blank"><img src="https://lh6.googleusercontent.com/-QSMvMMSSgHE/VH1j5d6DqfI/AAAAAAAAUIY/eodDnDumVCY/s400/IMGP1002_1.jpg"></a></p>

<p>こんな感じのが3本入っていて1000円強と、購入しやすい価格になっています。</p>

<p>ケーブルの良し悪しなんてのはまぁ体感できるもんでもないのでモノのレビューは避けますが、とりあえずお手頃にまともなケーブルが手に入るのは良かったです。</p>

<p>蛇足且つ今更ですが AnkerのUSB急速充電器ACアダプタは初期ロットに問題はあったものの、現行ロットでは修正済とのことで、こちらも大変便利なのでオススメです。</p>

<p>うちでは2台購入(初期ロット)して2台とも一部ポートが使用できない不具合が出たので、サポートに対応してもらい現行ロットのものを送ってもらいました。(5日ほどでAmazonから発送されてきた)</p>

<p>以上です。</p>

<p>評価: ★★★★★</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00NAQITHW" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00IDTILEW" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00DQ7590A" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NETGEAR GS116E]]></title>
    <link href="http://note.n6e.be//blog/2014/08/07/netgear-gs116e/"/>
    <updated>2014-08-07T22:01:00+09:00</updated>
    <id>http://note.n6e.be//blog/2014/08/07/netgear-gs116e</id>
    <content type="html"><![CDATA[<p>VLANを切れる安価なスイッチングハブ NETGEAR GS116E を買ってみた。</p>

<p>PPPoEのセグメントとPrivate LANのセグメントで2つのハブを使っていたのだけれど、機材を減らしたいと思いVLAN設定ができる安めのハブを探していたところ、NETGEAR製品くらいしかなさそうだったので16ポートのこいつを選んだ。</p>

<!-- more -->


<p>結論から言えば、家庭用としては大変コストパフォーマンスに優れた機材ではある、しかし若干悪いクセがあるように思えるのでちょっと書いてみる。</p>

<h3>設定ツールはAdobe AIRだけどWebもある</h3>

<p>悪いとこのひとつは設定ツールがAdobe AIRアプリであり、Windows向けにしかないこと。<br/>
まぁこれは一度IPアドレスを設定しちゃえば Web UI が使えるようになるので不要ではあるのだが、初期設定時にether portがついたWindowsマシンがないと詰む。</p>

<p>Web UIはこんな感じで、できることはAIRのアプリと同じ。<br/>
<a href="http://note.n6e.be//assets/screenshot/gs116ev2-web-ui.png" target="_blank"><img class="right" src="http://note.n6e.be//assets/screenshot/gs116ev2-web-ui.png" title="WEB UI" ></a></p>

<p>UI的にVLANの設定は若干わかりにくいかも知れない。</p>

<h3>ポートベースVLANは使うべきではない</h3>

<p>基本ポートベースVLANという機能があるが、これは使いものにならない(と思う)。<br/>
これでVLANを切ってみたらホストによっては</p>

<blockquote><p>br0: received packet on eth1 with own address as source address</p></blockquote>


<p>といったようなログが出るようになり、通信がままならなくなった。<br/>
まぁ素直に802.1QのAdvancedモードを使うように設定すればいいし、これが欠点とはならない。</p>

<h3>謎のパケット破棄ルールがある?</h3>

<p>一番よくない点として、どうも独自の判断でIPパケットを破棄している節がある。<br/>
確認しているのはPPPoEのセッションパケットで、中身のIP DestinationとSourceが同じアドレスのパケットを捨てていた。</p>

<p>そもそもこんなパケットが外に行こうとすることがおかしいといえばおかしいのだが、例を挙げればYAMAHAのRTシリーズのNATはこういう仕様になっていて、<br/>
LAN内やルーター自身から、ルーターのWANアドレス宛に通信しようとするとこういうパケットになり、一旦PPPoEのpeer先へパケットを投げる模様。<br/>
実際に ping の応答に 5msec ほどかかっており、ルーター内部で完結しているとは言いがたいレイテンシになっている。</p>

<p>さて、話を戻してWANアドレスにpingしながら、YAMAHAのルーターをつないだGS116Eのポートをミラーリングしてtcpdumpしているとこんな感じのパケットがきているのが見られる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 1, length 64
</span><span class='line'> PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 2, length 64
</span><span class='line'> PPPoE  [ses 0x7b6d] IP 1xx.1yy.74.199 &gt; 1xx.1yy.74.199: ICMP echo request, id 61399, seq 3, length 64</span></code></pre></td></tr></table></div></figure>


<p>このパケットはONUが繋がっている本来流れるべきポートへは流れていかないし(これもミラーリングで確認)、戻ってもいないのでGS116E内で破棄されていると考えられる。</p>

<p>こういうへんなNAT仕様のYAMAHAルーターも大概ではあるけれど、L2スイッチごときがL3の条件でパケットを勝手に捨てるのはいかがなものかと思う。(調べたら過去にIPv6パケットを捨ててるとかいう疑惑があった模様)<br/>
まぁ稀なケースなので我慢することにしたが、いわゆるヘアピンNAT( <a href="http://www.rfc-base.org/txt/rfc-4787.txt">RFC4748</a> )などといわれる機能に頼る環境では注意である。</p>

<h3>総評</h3>

<p>ともあれ、安価でVLAN切れてWeb UIで設定でき、ポートミラーリングでこういったトラブルシューティングができるのはなかなかよいかなと思う。(あくまで家庭用では)</p>

<p>評価: ★★★☆☆</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00GQL3U2M" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B004LV1SL4" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[近況]]></title>
    <link href="http://note.n6e.be//blog/2014/08/06/kinkyo/"/>
    <updated>2014-08-06T17:54:00+09:00</updated>
    <id>http://note.n6e.be//blog/2014/08/06/kinkyo</id>
    <content type="html"><![CDATA[<p>近況です。</p>

<p>とくにネタもなかったので放っておいてましたが、最近わりとモノを買うようになったので買ったものレビューでもしていこうかと思います。</p>

<p>以上です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CyanogenMod で DTCP-IP やパズドラを動かす]]></title>
    <link href="http://note.n6e.be//blog/2013/07/11/cyanogenmod-dtcp-ip/"/>
    <updated>2013-07-11T23:49:00+09:00</updated>
    <id>http://note.n6e.be//blog/2013/07/11/cyanogenmod-dtcp-ip</id>
    <content type="html"><![CDATA[<p>CyanogenMod でもパズドラを起動したいとです！！！</p>

<!-- more -->


<p>というわけなんですが、パズドラとかどうでもよくて TwonkyBeam の DTCP-IP を使いたいというが目的で調べました。<br/>
要するに root チェックにより CyanogenMod のようなカスタムROMでは使用できないアプリを動かすというやつです。</p>

<p>インターネットで調べると以下のような項目でroot端末かどうかをチェックしているようです。</p>

<ul>
<li><strong>su バイナリの存在</strong> /system/{bin,xbin}, /sbin あたりにsu があるとダメなようです</li>
<li><strong>/system/app/Superuser.apk の存在</strong> (CyanogenModにはないですがリネームすればいいだけです)</li>
<li><strong>getprop <em>ro.secure</em> の値が0だとNG</strong> (CyanogenModでは1なので問題ないです)</li>
<li><strong>getprop <em>ro.debuggable</em> の値が1だとNG</strong> (CyanogenModでは1なので対策が必要です)</li>
</ul>


<p><strong>su のバイナリ</strong> は <em>/system/bin/su</em>, <em>/system/xbin/su</em> にあるので適当にリネームして回避出来ますが、リネームしっぱなしだと root が必要なアプリを実行するときにこまるのでこんなスクリプトを書いてみました。</p>

<p>まずシステムの起動時に実行される <em>/data/local/userinit.sh</em> で <strong>su</strong> を <strong>sux</strong> にリネームして隠します。</p>

<figure class='code'><figcaption><span>/data/local/userinit.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/system/bin/sh</span>
</span><span class='line'>
</span><span class='line'>mount -o remount,rw /system
</span><span class='line'>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># su を退避 symlinkの場合は無視</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -x /system/bin/su -a ! -L /system/bin/su <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span>mv /system/bin/su /system/bin/sux
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -x /system/xbin/su -a ! -L /system/xbin/su <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span>mv /system/xbin/su /system/xbin/sux
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>mount -o remount,ro /system
</span></code></pre></td></tr></table></div></figure>


<p>次に su があれば削除し、なければ sux から symlink を貼るというようなスクリプトです。</p>

<figure class='code'><figcaption><span>/data/local/swsu.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/system/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="c"># rootじゃない場合sux使ってrootになる</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="sb">`</span>whoami<span class="sb">`</span> !<span class="o">=</span> <span class="s2">&quot;root&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span>sux -c <span class="nv">$0</span>
</span><span class='line'>  <span class="nb">exit</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>mount -o remount,rw /system
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -L /system/xbin/su <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span>ln -s /system/xbin/sux /system/xbin/su
</span><span class='line'>  ln -s /system/bin/sux /system/bin/su
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;enable su&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="k">  </span>rm -f /system/xbin/su
</span><span class='line'>  rm -f /system/bin/su
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;disable su&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>mount -o remount,ro /system
</span></code></pre></td></tr></table></div></figure>


<p>どちらも配置したら <strong>chmod 0755</strong> するのを忘れずに。</p>

<p>ひとまずこれで再起動してみて試します。<br/>
<strong>/data/local/swsu.sh</strong> は <a href="https://play.google.com/store/apps/details?id=com.ryo.commandRunner">CommandRunner</a> とかで起動したら良いでしょう。<br/>
ショートカットも作れるので便利です。<br/>
実行してみて su の存在をトグルできるようになってればOKです。<br/>
※ root をトグルするアプリも存在しますが、挙動を把握しやすくするため今回は自分でスクリプト書きました。</p>

<p>さて、次に <strong>getprop</strong> の値。まず <strong>/default.prop</strong> の値が云々的な説明をしているサイトがありますが間違いです。<br/>
目的のプロパティは <strong>boot.img</strong> の中、 <strong>initrd.img</strong> にある <strong>default.prop</strong> により設定されてます。(んでその initrd が / にマウントされる)<br/>
そんなわけで <strong>boot.img</strong> をいじる必要があります。結構めんどいです。</p>

<p>まず <strong>boot.img</strong> を <em>update.zip</em> から取り出しておきます。<br/>
<strong>boot.img</strong> の展開と再構築には Linux上で <em>abootimg</em> を使いますが、WindowsやMacでもなんとかする方法はあると思いますので頑張って。</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install abootimg unzip
</span><span class='line'><span class="nv">$ </span>wget http://get.cm/get/jenkins/34073/cm-10.1.1-grouper.zip
</span><span class='line'><span class="nv">$ </span>mkdir bootimg
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>bootimg
</span><span class='line'><span class="nv">$ </span>unzip ../cm-10.1.1-grouper.zip boot.img
</span><span class='line'><span class="nv">$ </span>abootimg -x boot.img
</span><span class='line'><span class="nv">$ </span>mkdir initrd
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>initrd
</span><span class='line'><span class="nv">$ </span>zcat ../initrd.img | cpio -i
</span><span class='line'><span class="nv">$ </span>sed -e <span class="s1">&#39;s/ro.debuggable=1/ro.debuggable=0/g&#39;</span> default.prop &gt; default.prop.new
</span><span class='line'><span class="nv">$ </span>mv default.prop.new default.prop
</span><span class='line'><span class="nv">$ </span>find . | cpio -o -H newq | gzip &gt; ../initrd.img
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ..
</span><span class='line'><span class="nv">$ </span>abootimg --create newboot.img -k zImage -r initrd.img
</span></code></pre></td></tr></table></div></figure>


<p>で、<strong>newboot.img</strong> ができたらひとまず <em>fastboot</em> から起動してみます。</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb reboot bootloader
</span><span class='line'><span class="nv">$ </span>sudo fastboot boot newboot.img
</span><span class='line'><span class="nv">$ </span>adb shell
</span><span class='line'>
</span><span class='line'>shell@android:/ <span class="nv">$ </span>getprop ro.debuggable
</span><span class='line'>0
</span><span class='line'>shell@android:/ <span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでパズドラは起動しますし、TwonkyBeam で DTCP-IP が使えるようになりました。<br/>
nasneで録画した動画やライブチューナでテレビも見られます！</p>

<p>しかしまだ終わりません。先ほどの <strong>swsu.sh</strong> を実行してみます。<br/>
動きませんね。<br/>
この状態だと su (sux) が動かないことに気が付きます。<br/>
なぜか確認なしにsuが拒否されてしまうのです。
logcat には次のように出力されています。</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>W/su      ( 8151): request rejected (10097-&gt;0 /system/bin/sh) F8?HO?
</span><span class='line'>D/su      ( 8147): su invoked.
</span><span class='line'>D/su      ( 8149): access_disabled
</span><span class='line'>E/su      ( 8148): Root access is disabled on non-debug builds
</span></code></pre></td></tr></table></div></figure>


<p>なるほど。<br/>
実は CyanogenMod で提供している su は変更が加えてあり、 <em>ro.debuggable=0</em> では無条件に拒否するようになっています。</p>

<p>しかし、<a href="https://github.com/CyanogenMod/Superuser/blob/379371bcff3f18b4a16beb37a35c2b211a941781/Superuser/jni/su/su.c#L548">ソース</a>をみてみると、runtime に <strong>/default.prop</strong> を見ているだけのようなので、システムが起動した後に <strong>/default.prop</strong> を書き換えてやればよさそうです。<br/>
でも、あれ？？？<br/>
でも起動したら su 使えないし書き換えられないんじゃ？<br/>
はい。そうです。そこで先ほどの <strong>userinit.sh</strong> に追記します。 <strong>userinit.sh</strong> は root権限で動きますからね。</p>

<p>普通に再起動して以下を<strong>追記</strong>した <strong>userinit.sh</strong> を改めて <strong>/data/local/userinit.sh</strong> へ置きます。 <strong>chmod 0755</strong> を忘れずに。(recovery で adb が使えれば recovery で作業してもいいです)</p>

<figure class='code'><figcaption><span>/data/local/userinit.sh(抜粋)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># /default.prop書換え</span>
</span><span class='line'>mount -o remount,rw /
</span><span class='line'>sed -e <span class="s1">&#39;s/ro.debuggable=0/ro.debuggable=1/g&#39;</span> /default.prop &gt; /default.prop.tmp
</span><span class='line'>mv /default.prop.tmp /default.prop
</span><span class='line'>chmod 0644 /default.prop
</span><span class='line'>mount -o remount,ro /
</span></code></pre></td></tr></table></div></figure>


<p>これでもう一度 fastboot boot newboot.img して確認してみましょう。</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb reboot bootloader
</span><span class='line'><span class="nv">$ </span>sudo fastboot boot newboot.img
</span><span class='line'><span class="nv">$ </span>adb shell
</span><span class='line'>shel@android:/ <span class="nv">$ </span>getprop ro.debuggable
</span><span class='line'>0
</span><span class='line'>shell@android:/ <span class="nv">$ </span>sux
</span><span class='line'>shell@android:/ <span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>うまく行きました。<br/>
満を持して newboot.img を fastboot で flash しましょう。</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb reboot bootloader
</span><span class='line'><span class="nv">$ </span>sudo fastboot flash boot newboot.img
</span></code></pre></td></tr></table></div></figure>


<p>そんなわけで、/data/local/ は wipe しない限り維持できますから、今後はアップデートするときに boot.img を改変するだけでよくなります。<br/>
boot.img の改変は面倒ですが、手順は決まっているしスクリプトにすれば自動化はできるかと思います。<br/>
(というか前述の手順がスクリプトそのものっぽい)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LXC コンテナで avahi-daemon を動かす]]></title>
    <link href="http://note.n6e.be//blog/2013/06/11/avahi-daemon-in-lxc-container/"/>
    <updated>2013-06-11T16:41:00+09:00</updated>
    <id>http://note.n6e.be//blog/2013/06/11/avahi-daemon-in-lxc-container</id>
    <content type="html"><![CDATA[<p>LXCコンテナが役割ごとに増殖してて、DHCPつかってアドレス振ってると、振られたIPアドレス調べたり色々面倒なのでmDNSでアレしたいなと。</p>

<p>というわけで mDNS であるところの <strong>avahi-daemon</strong> を動かそうとしたんですが動きませんのでメモ。</p>

<!-- more -->


<p>調べによるとLXCのコンテナでは <strong>setrlimit(2)</strong> システムコールが使えないらしいです。<br/>
<strong>avahi-daemon</strong> はデフォルトでこのシステムコールを使うので起動しません。<br/>
で、オプションに <em>&mdash;no-rlimits</em> をつけて起動すれば良いとのこと。</p>

<p>Ubuntuだとこのへん (/etc/init/avahi-daemon.conf) の opts に <em>&mdash;no-rlimits</em> を追加</p>

<figure class='code'><figcaption><span>/etc/init/avahi-daemon.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># avahi-daemon - mDNS/DNS-SD daemon</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># The Avahi daemon provides mDNS/DNS-SD discovery support (Bonjour/Zeroconf)</span>
</span><span class='line'><span class="c"># allowing applications to discover services on the network.</span>
</span><span class='line'>
</span><span class='line'>description     <span class="s2">&quot;mDNS/DNS-SD daemon&quot;</span>
</span><span class='line'>
</span><span class='line'>start on <span class="o">(</span>filesystem
</span><span class='line'>          and started dbus<span class="o">)</span>
</span><span class='line'>stop on stopping dbus
</span><span class='line'>
</span><span class='line'>expect daemon
</span><span class='line'>respawn
</span><span class='line'>
</span><span class='line'>pre-start script
</span><span class='line'>    /lib/init/apparmor-profile-load usr.sbin.avahi-daemon
</span><span class='line'>end script
</span><span class='line'>
</span><span class='line'>script
</span><span class='line'>        <span class="nv">opts</span><span class="o">=</span><span class="s2">&quot;-D --no-rlimits&quot;</span>
</span><span class='line'>        <span class="o">[</span> -e <span class="s2">&quot;/etc/eucalyptus/avahi-daemon.conf&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">opts</span><span class="o">=</span><span class="s2">&quot;${opts} -f /etc/eucalyptus/avahi-daemon.conf&quot;</span>
</span><span class='line'>        <span class="nb">exec </span>avahi-daemon <span class="k">${</span><span class="nv">opts</span><span class="k">}</span>
</span><span class='line'>end script
</span></code></pre></td></tr></table></div></figure>


<p>これで動くので <em>hostname.local</em> といった名前でコンテナにアクセスできるようになりました。<br/>
<em>&mdash;no-rlimits</em> でどういう影響がでるのかは調べていません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ffmpeg で ustream 配信したメモ]]></title>
    <link href="http://note.n6e.be//blog/2013/05/30/ffmpeg-de-ustream/"/>
    <updated>2013-05-30T17:26:00+09:00</updated>
    <id>http://note.n6e.be//blog/2013/05/30/ffmpeg-de-ustream</id>
    <content type="html"><![CDATA[<p>どうも。</p>

<p>当方、<a href="http://ustream.tv/channel/northeye">Ustreamで猫カメラ</a>を運用しているのだけれど、FlashMediaEncoderを動かしていたWindowsがとても不安定で廃絶してしまったので、どうしようかと思っていました。<br/>
それと、常時稼動マシンは減らしたい。<br/>
そんなわけでいつも動いているNASマシンかルーターマシンで動かすことにしました。</p>

<!-- more -->


<p>NASやルーターはだいたいLinuxでやってるのでLinuxでやることになります。<br/>
KVMにWindows環境つくってPCIパススルーでUSBデバイスをスルーして配信することも可能ですが、エンコードというプロセスが存在するため、ある程度のパフォーマンスが必要になり、仮想環境ではなかなか無理がありました。(試したけどやめた)</p>

<p>そんなわけで、今回はルーターにffmpegいれてこいつでやってみます。<br/>
ちなみにカメラデバイスはLogicoolのC910というHDウェブカメラで、ステレオマイクがついています。<br/>
※ もう売ってなくて<a href="http://amzn.to/11dbZvi">C920</a>という機種が後継のようです。</p>

<h2>lxcで環境構築</h2>

<p>しかしながら、ルーターのような重要なマシンに余計なものを入れたくないのも事実。<br/>
そこでlxcのコンテナで環境を分離します。あとで別のマシンでやりたくなったとき移行も簡単なので便利です。<br/>
lxcの環境構築は省略して、ポイントだけ。</p>

<p>lxcの設定ファイルにv4l2とsndのcgroupパーミッションを追加します。</p>

<pre><code># v4l2
lxc.cgroup.devices.allow = c 81:* rwm
# sound
lxc.cgroup.devices.allow = c 116:* rwm
</code></pre>

<p>ホスト側の/dev/sndをbind mountしときます。</p>

<pre><code>% sudo mount --bind /dev/snd /lxc/ustream/rootfs/dev/snd
</code></pre>

<p>lxcをstartします。</p>

<pre><code>% sudo lxc-start -n ustream -d
</code></pre>

<p>以降はlxc環境での操作になります。<br/>
ffmpegはubuntuやdebianのだとlibavになってるのでdeb-multimedia.orgから入れます。</p>

<pre><code># echo "deb http://www.deb-multimedia.org sid main non-free" &gt; /etc/apt/sources.list.d/multimedia.list
# echo 'APT::Install-Recommends "0";' &gt; /etc/apt/apt.conf.d/99norecommends 
# apt-get update
# apt-get install ffmpeg alsa-utils
</code></pre>

<p>自分をaudioとvideoのグループに追加して、/dev/video0 や /dev/snd あたりのパーミッション確認をしときましょう。<br/>
カメラは単にUSBカメラさすだけで /dev/video0 は参照できました。<br/>
audioの方ですがひとまず /proc/asound あたりを見てどういう状態か確認します。pulse audioはよく知りません。</p>

<pre><code>% cat /proc/asound/cards
 0 [PCH            ]: HDA-Intel - HDA Intel PCH
                      HDA Intel PCH at 0xfe700000 irq 63
 1 [U0x46d0x821    ]: USB-Audio - USB Device 0x46d:0x821
                      USB Device 0x46d:0x821 at usb-0000:00:1d.0-1.7.4, high speed
% cat /proc/asound/devices
  2: [ 0- 3]: digital audio playback
  3: [ 0- 2]: digital audio capture
  4: [ 0- 1]: digital audio playback
  5: [ 0- 0]: digital audio playback
  6: [ 0- 0]: digital audio capture
  7: [ 0- 3]: hardware dependent
  8: [ 0- 2]: hardware dependent
  9: [ 0]   : control
 10: [ 1- 0]: digital audio capture
 11: [ 1]   : control
 33:        : timer
</code></pre>

<p>というわけで、card  1がUSBカメラのマイクっぽくて、1-0がキャプチャのようなので ffmpeg で渡すオプションには hw:1,0で良さげです。</p>

<h2>Ustreamの配信用RTMP URL</h2>

<p>ustreamの配信先URLを確認します。<br/>
ログインしてダッシュボード→番組設定→リモート のところに RTMP URLとストリームキーがあるので、結合してひとつのURLにします。
( URL + &ldquo;/&rdquo; + キー )</p>

<h2>ffmpeg の実行</h2>

<p>ffmpeg を実行してみます。</p>

<pre><code>% ffmpeg -f v4l2 -i /dev/video0 -ac 2 -f alsa -i hw:1,0 -c:a libfaac -ar 22050 -b:a 48k -c:v libx264 -preset veryfast -threads auto -vsync 1 -f flv 'rtmp://1.xxx.fme.ustream.tv/ustreamVideo/xxxxxx/&lt;キー&gt; flashver=FME/3.0\20(compatible;\20FMSc/1.0)'
</code></pre>

<p>とまぁこんな感じです。<br/>
x264のプリセットはveryfastとかにしたほうが遅延が少なくてすむのかなと思いました。</p>

<h2>TIPS</h2>

<p>とりあえず ffmpeg のオプションの順番には意味があるので注意しましょう。</p>

<h3>マイクのミュートとかを動的にやりたい。</h3>

<p>ffmpegを止めずにマイクのオンオフはできたほうがいいですね。</p>

<pre><code>% alsamixer -c 1 
</code></pre>

<p>してF4でキャプチャのミキサーにしてSPACEキーでトグル。</p>

<h3>iOSやAndroidのアプリで視聴できるフォーマットにしたい</h3>

<p>いろいろ調べましたが、baseline profileでLevel3.0ならいいらしいです。<br/>
対応するffmpegのオプションは</p>

<pre><code>-profile:v baseline -level 3.0 
</code></pre>

<p>ということなのですが、ただこれをつけただけだと</p>

<pre><code>x264 [error]: baseline profile doesn't support 4:2:2
[libx264 @ 0xb7fa40] Error setting profile baseline.
</code></pre>

<p>となり失敗します。<br/>
どうやらpixel formatがよくないようで、さらに</p>

<pre><code>-pix_fmt yuv420p
</code></pre>

<p>というオプションをつければ良いようです。</p>

<h3>たまにffmpegが死ぬ</h3>

<p>Ustreamサーバの調子にも左右されますがごく稀にffmpegプロセスが死んでますので。</p>

<pre><code>% while true; do
ffmpeg -r 15 -s 640x360 -f v4l2 -i /dev/video0 -ac 2 -f alsa -i hw:1,0 -acodec libfaac -ar 22050 -b:a 48k -c:v libx264 -profile:v baseline -level 3.0 -preset veryfast -pix_fmt yuv420p -threads 3 -vsync 1 -y -f flv 'rtmp://1.xxxx.fme.ustream.tv/ustreamVideo/streamid/streamkey flashver=FME/3.0\20(compatible;\20FMSc/1.0)'
sleep 5
done
</code></pre>

<p>みたいに実行するようにしました。</p>

<h3>オーディオのキャプチャができない</h3>

<p>当方で遭遇したのはマイクのチャンネル数を合わせないといけないという事でした。<br/>
マイクがモノラルなら -ac 1 、ステレオなら -ac 2 としないといけないようです。</p>

<h3>ホワイトバランスなどの調整</h3>

<p>v4l2-ctl -c でやります。<br/>
v4l2-ctl -L で何ができるかわかります。</p>

<pre><code>% v4l2-ctl -L 
                     brightness (int)    : min=0 max=255 step=1 default=128 value=128
                       contrast (int)    : min=0 max=255 step=1 default=32 value=32
                     saturation (int)    : min=0 max=255 step=1 default=32 value=32
 white_balance_temperature_auto (bool)   : default=1 value=0
                           gain (int)    : min=0 max=255 step=1 default=64 value=57
           power_line_frequency (menu)   : min=0 max=2 default=2 value=2
                0: Disabled
                1: 50 Hz
                2: 60 Hz
      white_balance_temperature (int)    : min=2800 max=6500 step=1 default=4000 value=4300
                      sharpness (int)    : min=0 max=255 step=1 default=72 value=72
         backlight_compensation (int)    : min=0 max=1 step=1 default=0 value=0
                  exposure_auto (menu)   : min=0 max=3 default=3 value=3
                1: Manual Mode
                3: Aperture Priority Mode
              exposure_absolute (int)    : min=3 max=2047 step=1 default=166 value=415 flags=inactive
         exposure_auto_priority (bool)   : default=0 value=1
                   pan_absolute (int)    : min=-36000 max=36000 step=3600 default=0 value=0
                  tilt_absolute (int)    : min=-36000 max=36000 step=3600 default=0 value=0
                 focus_absolute (int)    : min=0 max=255 step=17 default=68 value=0
                     focus_auto (bool)   : default=1 value=0
                  zoom_absolute (int)    : min=1 max=5 step=1 default=1 value=1

% v4l2-ctl -c white_balance_temperature=4300
</code></pre>

<p>ffmpeg 実行するたびにリセットされる気がする。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B006NTPLJW" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B001VA2L4Q" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xperia（TM）ワールド タッチ＆トライ ブロガーミーティングに参加しました(先月)]]></title>
    <link href="http://note.n6e.be//blog/2013/02/14/xperia-world-touch-try/"/>
    <updated>2013-02-14T20:23:00+09:00</updated>
    <id>http://note.n6e.be//blog/2013/02/14/xperia-world-touch-try</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://farm9.staticflickr.com/8092/8407636657_dd10cb17a9_n_d.jpg">
明けましておめでとう御座います。<br/>
もうXperia Zが発売して約一週間が過ぎ、先月のことになってしまいましたがXperia (主にXperia Z)のタッチ＆トライイベントに参加してきましたのでリポートです。</p>

<!-- more -->


<p>イベント自体はコジャレた場所で開催され、軽食もあり、試用端末も一人一台ずつ渡してくれて大変好印象でした。<br/>
肝心のデバイスの方ですが、ぶっちゃけそんなに興味惹かれることはありませんでした。<br/>
というのも、僕はすでに同グレードにあたる5インチフルHD端末機 HTC J butterfly(HTL21)を所有していて、それとの比較をすると大して抜きん出た部分がなかったからです。<br/>
それとXperia Tablet Zのほうはそもそもタブレットにあまり興味がなかったのでほぼスルー気味でしたが、筐体の薄さだけは確認してきました。</p>

<p>さて実際の比較ポイントなんですが、中身はAndroid 4.1なんでほぼ同じ、カタログスペックでのハードウェア性能もだいたい同じ、UIがXperiaかHTCかの違い程度くらいしかと思います。大雑把ですが…。<br/>
どっちを買えばいいかと言われたら「どっちでもいい、見た感じで」と言えるレベル。</p>

<p>たとえば、カメラのモードレスUIとか、動画撮影中にも静止画を撮影可能と自信ありげに説明いただきましたが、HTL21でも同様です。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8409288889/in/set-72157632598441208" target="_blank"><img src="http://farm9.staticflickr.com/8225/8409288889_bd74d8d0e3_d.jpg"></a></p>

<p>画素数ではXperiaのほうが13Mなのでだいぶ上ですね。<br/>
カメラの起動の速さではHTL21のほうが速かったですが、初回以降はあまりそこまで変わりませんでした。<br/>
ちなみに近くにあったオブジェを撮影したものがこちら。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8409289141/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8360/8409289141_3fa539be9c_n_d.jpg"></a></p>

<p>あ、ステータスバーのプルダウンに各種トグルスイッチがあるのはまぁ便利ですね。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8410384660/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8323/8410384660_60f614e20a_d.jpg"></a></p>

<p>POBoxのキーボードはリサイズできるようになったようです。<br/>
僕はATOKつかってるんですがこちらもリサイズ可能ですがPOBoxのほうが柔軟にリサイズデキルような気がしました。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8409288943/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8091/8409288943_f60d8de72f_n_d.jpg"></a></p>

<p>その他僕がまず気にする部分は /proc/meminfo の情報です。ユーザーが利用できるメモリ量はここで決まります。<br/>
Xperiaは MemTotal 1.8GB程度、HTL21は1.6GBなので、どっちがいいって言えばそりゃXperiaですが、1.5GBを超えると2.0GBまではまぁ誤差でいいかなとか思ってしまいます。<br/>
だいたいいつも400MBくらいは空いてるから。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8409289003/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8079/8409289003_cd6bae1c2c_d.jpg"></a></p>

<p>次に気になるのがタッチイベントを何点拾えるか…なんですが今時はだいたいどれも10点いけるので最早どうでもよくなりました。<br/>
実際XperiaもHTL21も10点いけます。初代Xperiaは1点だったのでひどかったですね。</p>

<p>続いて筐体の大きさ具合。<br/>
これも誤差レベルの違いしかないかなぁ…と思いますです。<br/>
Xperiaはイヤホン端子に蓋があるが、HTL21にはありません。<br/>
HTL21のUSB蓋は取れやすい(が、アロンアルファで接着しなおせば取れない)が、Xperiaのほうはそうそう取れないと思います。(IS12Sでの感想)<br/>
<a href="http://www.flickr.com/photos/xnortheye/8408732254/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8361/8408732254_8b6cb18cf9_n_d.jpg"></a><br/>
 (左Xperia Z,右HTL21)</p>

<p><a href="http://www.flickr.com/photos/xnortheye/8407630125/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8507/8407630125_fa4179ea99_n_d.jpg"></a><br/>
 HTL21は裏面が湾曲しているので端が浮いてます。最薄部分ではHTL21のほうが薄いかな。</p>

<p>ストラップホールがついているのは日本ではプラスポイントかもしれませんね。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8407616023/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8373/8407616023_2e3d7f8819_n_d.jpg"></a></p>

<p>最後に、Xperia Tablet Zの薄さはまぁ薄かったです。<br/>
でも解像度、2560x1600のNexus10があることを考えると全く惹かれませんし、どう考えてもNexus10買ったほうがいいですね。<br/>
<a href="http://www.flickr.com/photos/xnortheye/8407617267/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8232/8407617267_a0ea5142e7_n_d.jpg"></a>
<a href="http://www.flickr.com/photos/xnortheye/8407617961/in/set-72157632598441208/" target="_blank"><img src="http://farm9.staticflickr.com/8473/8407617961_563868cafb_n_d.jpg"></a></p>

<p>おみやげにXperia缶バッジと<a href="http://pur.store.sony.jp/Qnavi/Product/CP-F1LSVP/">モバイルバッテリー</a>を頂きました。<br/>
その他全ての写真は<a href="http://www.flickr.com/photos/xnortheye/sets/72157632598441208/">flickr</a>に。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[猫にマカロンベッドを買ってあげた]]></title>
    <link href="http://note.n6e.be//blog/2012/10/23/macaron-bed-for-cats/"/>
    <updated>2012-10-23T23:37:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/23/macaron-bed-for-cats</id>
    <content type="html"><![CDATA[<p>そろそろ寒いし、楽天みてたら2012年版とやらが売っていたので買いました。<br/>
去年はこれ売り切れまくりで全く買えなかったけど買えました。</p>

<!-- more -->


<p>けっこう気に入ってる模様！
<a href="http://farm9.staticflickr.com/8331/8100404536_ee1906bce2_c_d.jpg" target="_blank"><img src="http://farm9.staticflickr.com/8331/8100404536_ee1906bce2_n_d.jpg"></a>
<a href="http://farm9.staticflickr.com/8334/8100291298_78bd87b96e_c_d.jpg" target="_blank"><img src="http://farm9.staticflickr.com/8334/8100291298_78bd87b96e_n_d.jpg"></a></p>

<p>あ、Amazonにもありますね。売り切れないうちに買いましょう。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008ZVMQ4Y" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008ZVMQ3A" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008ZVMQ6W" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS6はAVRCP1.3でMW600とかに曲名表示できる]]></title>
    <link href="http://note.n6e.be//blog/2012/10/19/ios6-avrcp-1-3/"/>
    <updated>2012-10-19T15:47:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/19/ios6-avrcp-1-3</id>
    <content type="html"><![CDATA[<p>iPhone5にして気がついたのですが、MW600やAT-PHA05BTでの曲名表示が可能になってました。<br/>
iOS6からかなと思います。便利。<br/>
<a href="http://farm9.staticflickr.com/8464/8118329335_aa039c13f3_d.jpg" target="_blank"><img src="http://farm9.staticflickr.com/8464/8118329335_aa039c13f3_m_d.jpg"></a></p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0065V9TXC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0087BQCHE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B003N111Y2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon BasicのHDMIケーブル安い]]></title>
    <link href="http://note.n6e.be//blog/2012/10/17/amazon-basic-hdmi-cable/"/>
    <updated>2012-10-17T15:58:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/17/amazon-basic-hdmi-cable</id>
    <content type="html"><![CDATA[<p>安いし品質良さそうだし便利。<br/>
名のあるメーカー品買うのアホらしい。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B003L1ZYYM" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0052SCU8U" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[twicca - Evernote プラグイン 1.7.0 release]]></title>
    <link href="http://note.n6e.be//blog/2012/10/16/twicca-evernote-plugin-1-7-0-release/"/>
    <updated>2012-10-16T23:46:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/16/twicca-evernote-plugin-1-7-0-release</id>
    <content type="html"><![CDATA[<p><a href="https://play.google.com/store/apps/details?id=jp.takuo.android.twicca.plugin.evernote">twicca &ndash; Evernote プラグイン</a> 1.7.0 をリリースしました。<br/>
2012/11 よりパスワード認証でのサービス提供が終了することに伴い、Evernoteサービスの認証にOAuthを使うようになりました。</p>

<!-- more -->


<p>認証手順で若干の不具合があり、ブラウザでOAuth認証した後設定画面に戻るのですが、そこからさらにブラウザが立ち上がってしまいます。
認証自体は正常に終了していますのでそのままブラウザを終了して問題ありません。</p>

<p>Evernote SDKでのintent処理に問題がある気がしていますが、試行錯誤したものの修正できなかったのでとりあえずこの状態でのリリースになっています。<br/>
後ほどSDKを使わないでOAuthを処理する方法を試し修正していきたいと思います。</p>

<p>※ SDKサイズが増えAPKのサイズも増大してしまいました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppleTV買った]]></title>
    <link href="http://note.n6e.be//blog/2012/10/14/appletv/"/>
    <updated>2012-10-14T15:13:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/14/appletv</id>
    <content type="html"><![CDATA[<p>AppleTV(っていうかAirPlay)最高！すごい！素晴らしい！みたいなエントリにしようと思ったんですがね。<br/>
というのも使っていたdockコネクタスピーカーTSX-70がiPhone5にしてから使えなくなったんでね、AppleTV買って満足してたんですよ。</p>

<!-- more -->


<p>Youtubeが見られるとかHuluが見られるとかわりとどうでもよくて、iTunesやiPhoneに貯めこんであるオーディオビジュアル資産をAVアンプで再生できるってことが最高なんですよ。<br/>
やっぱそれなりのアンプとスピーカーを揃えている身としては是非とも有効活用してまいりたい。<br/>
そこでこのAppleTVだったわけですね。大変便利だし、今までなんで買わなかったのかわからないし、AVアンプの類もっててAppleTVもってないのは頭おかしいとしか思えない。</p>

<p>そんで、これはAVアンプの新調機運きてるなーみたいに思ってYAMAHAのサイトみてたら、どうやら最近のAVアンプは単体でAirPlay対応なんですね。<br/>
AppleTVいらねえじゃん！っていう。</p>

<p>まぁどの程度の対応レベルかは使ってみないとわかりませんが、dockコネクタスピーカー以上のものであることは間違いない。
AppleTVもまぁ安いしAirPlayミラーリングとか面白いしホームシェアリングでライブラリ再生できるしリモコンはクソみたいに使いづらいしおもちゃとしていっかぁ…ってなってる。<br/>
そんなわけで、<a href="http://jp.yamaha.com/products/audio-visual/av-amplifiers/rx-a2020_black__j/">YAMAHA AVENTAGE RX-A2020</a>の購入を決意して<a href="http://kakaku.com/item/K0000399339/">価格.com</a>を眺める毎日です。マジ。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007JQGUW0" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0094LZ1VE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アウトレイジビヨンド観た]]></title>
    <link href="http://note.n6e.be//blog/2012/10/06/outrage-beyond/"/>
    <updated>2012-10-06T23:15:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/06/outrage-beyond</id>
    <content type="html"><![CDATA[<p>珍しく初日に観てきました。<br/>
初日のせいか、いやいや同時に公開になったまどかマギカのせいか、新宿バルト9は大変混雑していました。</p>

<!-- more -->


<p>ヤクザ映画というカテゴリなんだろうけど、たけし流の笑いもちゃんとあり、面白かったです。
終わりはまぁそうなるだろうなという結果でしたが。
もう一回くらい見てもいいかも。</p>

<p><a href="http://wwws.warnerbros.co.jp/outrage2/">アウトレイジ ビヨンド公式</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone5 購入]]></title>
    <link href="http://note.n6e.be//blog/2012/10/03/iphone5/"/>
    <updated>2012-10-03T02:27:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/10/03/iphone5</id>
    <content type="html"><![CDATA[<p><img class="right" src="https://lh5.googleusercontent.com/-XzUB7CssnKw/UGsmquVL_6I/AAAAAAAAK1U/i4KGsQbY9ik/s288/IMGP0664.JPG">
iPhone5に殺された者たちがいる。</p>

<!-- more -->


<p>ライトニングコネクタになり、既存のドック型周辺機器が死滅した。<br/>
ライトニングコネクタになり、ドックコネクタを使用したストラップ製品も死滅した。<br/>
イヤフォンジャックが下付きになり、にゃんこ型イヤフォンジャックカバーが死んだ。<br/>
まぁ僕が持ってるのはドックステーションスピーカーだけですけども。</p>

<p>Androidばっかり買っているのでiPhoneつかわないのかな？って思われがちだけど必要とあらばObj-Cだって書くくらいにはiPhone使います。<br/>
iOSのエクスペリエンスは素晴らしいです。<br/>
だけど技術者としての自由度が大変低くて面白くないのも事実(個人の印象です)。<br/>
ただ、一つの型にハマっているので使いやすい端末なのは間違いないです。<br/>
要するに良さのベクトルが違うと思うんです。</p>

<p>そんなわけで iPhone5 買いましたし、LTEだー、わーって感じです。<br/>
auでもよかったんだけど、すでにau3回線あるしそのうち一個をMNPしてSoftbankにしました。<br/>
今のところ行動範囲でそこそこLTE使えてるしそこそこ速いし満足してます。</p>

<p>ただ先ほど書いたように、YAMAHAのdockスピーカーTSX-70はごみになったのでどうしようかと思っている。<br/>
代替の機械はAppleTVを発注したのでAVアンプにつないで音楽や動画流せればいいやなんだけど。</p>

<p>まぁともかく今後持ち歩くのはモバイルSuica載ってるIS12SとiPhone5とNexus 7とイーモバイルのGP02ということになりそうです。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B006KJCNXM" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B009A3MDWQ" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008GDNFSW" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008F45ECC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IS12Sのswap]]></title>
    <link href="http://note.n6e.be//blog/2012/09/21/is12s-swap/"/>
    <updated>2012-09-21T01:01:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/09/21/is12s-swap</id>
    <content type="html"><![CDATA[<p>前回のエントリでIS12Sでswapだわーいって嬉々として書いたのだが、vm.swappiness=60だとはっきりいって使いものにならないということをこの1ヶ月ほどで体感してきた。</p>

<p>というわけで、vm.swappiness=20 くらいがよいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[au IS12Sでスワップを有効にする [要root]]]></title>
    <link href="http://note.n6e.be//blog/2012/08/07/is12s-enable-swap/"/>
    <updated>2012-08-07T00:14:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/08/07/is12s-enable-swap</id>
    <content type="html"><![CDATA[<p>IS12S をICS にアップデートしてからというもの、メモリが足りなくていささか不便になってきました。<br/>
そこでスワップを導入してみることにします。</p>

<!-- more -->


<p>そもそも1GBもあるはずなにどうなってるのか調べてみると&hellip;</p>

<pre><code>$ cat /proc/meminfo
MemTotal:         650404 kB
MemFree:           20656 kB
Buffers:             376 kB
Cached:            71860 kB
...
</code></pre>

<p>どうやらカーネルに予約されているのか知りませんが650MB弱しか使えないようですね。</p>

<h3>カーネルの変更は不要、root は必要</h3>

<p>幸いなことに、IS12Sのカーネルはswapがを扱えるようになっていますので、カーネルへの変更は不要です。<br/>
root(とbusybox)が必要ですので注意。rootの取得方法は下記URLのサイト様を参考にするとよいです。</p>

<p><a href="http://blog.huhka.com/2012/06/rooting-toolkit-for-xperia-acro-hd.html">http://blog.huhka.com/2012/06/rooting-toolkit-for-xperia-acro-hd.html</a>
<a href="http://blog.huhka.com/2012/07/xperia-acro-hd-kddi-is12sics-root.html">http://blog.huhka.com/2012/07/xperia-acro-hd-kddi-is12sics-root.html</a>
<a href="http://blog.huhka.com/2012/08/gbis12sicsroot.html">http://blog.huhka.com/2012/08/gbis12sicsroot.html</a></p>

<p>いずれも2.3.7の状態である必要があるので4.0にしちゃった場合はなんとかして2.3.7に戻す必要があります。(ftfがあれば戻せる)</p>

<h3>どこにスワップ領域を確保するか</h3>

<p>さて、スワップを有効にするにはスワップ<strong>パーティション</strong>を作るか、スワップ<strong>ファイル</strong>をつくるかの2通りありますが、SDカードにスワップ<strong>ファイル</strong>を作るのはやめたほうがよさそうです。
(スワップを有効にしたままSDカードをマウント解除すると挙動がおかしくなるため)</p>

<p>スワップ<strong>ファイル</strong>を作る場合は/sdcard/(内蔵ストレージ)とか/data/ のどっかに作ったほうがよいでしょう。
しかし、/sdcard/swapfile のように内蔵ストレージに作ると、後述する手順で起動時に有効にすることができないため、再起動のたびに手動で有効にしなくてはならないことを留意してください。</p>

<p>また、SDカード上にスワップ<strong>パーティション</strong>を作る場合もクラス10とか速いSDカードを使ったほうがよいでしょう。</p>

<h3>スワップファイルを作る場合</h3>

<p>adb shell で作業を行います。 su でrootになる必要があります。</p>

<pre><code>$ su
# dd if=/dev/zero of=/data/local/swapfile bs=$((1024 * 1024)) count=256
# chmod 644 /data/local/swapfile
# mkswap /data/local/swapfile
# swapon /data/local/swapfile
</code></pre>

<p>これで 256MBのスワップファイルを作り、有効になりました。</p>

<h3>SDカードにスワップパーティションを作る場合</h3>

<p>少々面倒ですが、adb shell だけでもできます。<br/>
SDカードの中身は全部消えるので注意。</p>

<p>まず SDカードをアンマウント</p>

<pre><code>$ su
# umount /mnt/ext_card
</code></pre>

<p>fdisk でパーティションを切ります。 SDカードは /dev/block/mmcblk1 です。</p>

<pre><code># fdisk /dev/block/mmcblk1

The number of cylinders for this disk is set to 3801.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)

Command (m for help): p

Disk /dev/block/mmcblk1: 31.3 GB, 31393316864 bytes
256 heads, 63 sectors/track, 3801 cylinders
Units = cylinders of 16128 * 512 = 8257536 bytes

              Device Boot      Start         End      Blocks  Id System
/dev/block/mmcblk1p1   *           1        3801    30651232+  c Win95 FAT32 (LBA)

Command (m for help): d
Selected partition 1

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-3801, default 1): Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3801, default 3801): 3768

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 2
First cylinder (3769-3801, default 3769): Using default value 3769
Last cylinder or +size or +sizeM or +sizeK (3769-3801, default 3801): Using default value 3801

Command (m for help): p

Disk /dev/block/mmcblk1: 31.3 GB, 31393316864 bytes
256 heads, 63 sectors/track, 3801 cylinders
Units = cylinders of 16128 * 512 = 8257536 bytes

              Device Boot      Start         End      Blocks  Id System
/dev/block/mmcblk1p1               1        3768    30385120+ 83 Linux
/dev/block/mmcblk1p2            3769        3801      266112  83 Linux

Command (m for help): t 
Partition number (1-4): 1
Hex code (type L to list codes): c
Changed system type of partition 1 to c (Win95 FAT32 (LBA))

Command (m for help): a
Partition number (1-4): 1

Command (m for help): t
Partition number (1-4): 2
Hex code (type L to list codes): 82
Changed system type of partition 2 to 82 (Linux swap)

Command (m for help): p

Disk /dev/block/mmcblk1: 31.3 GB, 31393316864 bytes
256 heads, 63 sectors/track, 3801 cylinders
Units = cylinders of 16128 * 512 = 8257536 bytes

              Device Boot      Start         End      Blocks  Id System
/dev/block/mmcblk1p1   *           1        3768    30385120+  c Win95 FAT32 (LBA)
/dev/block/mmcblk1p2            3769        3801      266112  82 Linux swap

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table

# busybox mkdosfs /dev/block/mmcblk1p1
# mkswap /dev/block/mmcblk1p2 
Setting up swapspace version 1, size = 272494592 bytes
# swapon /dev/block/mmcblk1p2
</code></pre>

<p>これでだいたい256MBのスワップパーティションが作れました。
一番目のパーティションは通常使用するvfatパーティションです。(boot フラグは不要でしょうが、最初からついてたので付けただけです)
サイズは好きにしたらよいと思いますが、一番目はFAT32にしたほうが無難な気がします。</p>

<p>あとはスワップの頻度を調整します</p>

<pre><code># sysctl -w vm.swappiness=40
</code></pre>

<p>値は0から100で100が最も頻度が高くなります。だいたい30くらいがいいようですが、様子を見ながら調整するとよいでしょう。<br/>
カーネルのデフォルトは60です。</p>

<h3>起動時に有効にするために</h3>

<p>IS12S は init.d 的なものがなくユーザー追加のスクリプトを起動時に実行することはできませんが、起動時に <strong>/system/etc/install-recovery.sh</strong> というスクリプトを実行している箇所があるので、これを利用します。<br/>
<strong>/system/etc/install-recovery.sh</strong> そのものは標準では存在しないので新規に作ることになります。
スワップファイルの場合、このスクリプトの実行時には /sdcard がマウントされていないので、/sdcard/ にファイルを作った場合は注意です。</p>

<figure class='code'><figcaption><span>/system/etc/install-recovery.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/system/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="c"># パーティションの場合</span>
</span><span class='line'>swapon /dev/block/mmcblk1p2
</span><span class='line'><span class="c"># ファイルの場合</span>
</span><span class='line'><span class="c"># swapon /data/local/swapfile</span>
</span><span class='line'>sysctl -w vm.swappiness<span class="o">=</span>40
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで <strong>install-recovery.sh</strong> を /sdcard/ に作り、下記のコマンドでコピーします。</p>

<pre><code>$ su
# cd /system/etc
# mount -o remount,rw /system ; cp /sdcard/install-recovery.sh . ; chmod 755 install-recovery.sh ; mount -o remount,ro /system
</code></pre>

<p>一行で実行すればリマウントによる再起動を回避できるかと思われます。</p>

<p>というわけでスワップを有効にできました。</p>

<pre><code>$ su
# free
          total         used         free       shared      buffers
  Mem:       650404       622388        28016            0         3128
 Swap:       266108        32388       233720
Total:       916512       654776       261736
# cat /proc/meminfo
MemTotal:         650404 kB
MemFree:           29596 kB
Buffers:            3136 kB
Cached:           175632 kB
SwapCached:        13048 kB
Active:           250536 kB
Inactive:         264296 kB
Active(anon):     163560 kB
Inactive(anon):   174236 kB
Active(file):      86976 kB
Inactive(file):    90060 kB
Unevictable:        1228 kB
Mlocked:               0 kB
HighTotal:        523264 kB
HighFree:           6260 kB
LowTotal:         127140 kB
LowFree:           23336 kB
SwapTotal:        266108 kB
SwapFree:         233728 kB
...
</code></pre>

<p>効果のほどですが、OOMでバックグラウンド処理が途中で殺されることがなくなった気がします。</p>

<p><a href="https://lh3.googleusercontent.com/-CfWIVT_CFTY/UB_8w-H4_9I/AAAAAAAAKg4/he2aOplKlB4/s800/2012-08-07%252002.18.31.png" target="_blank"><img src="https://lh3.googleusercontent.com/-CfWIVT_CFTY/UB_8w-H4_9I/AAAAAAAAKg4/he2aOplKlB4/s288/2012-08-07%252002.18.31.png" title="System Tuner" ></a><br/>
結構使ってますが空きメモリにそこそこ余裕が見られます。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0065SI5SK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007WTAJTO" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[オーディオテクニカ AT-PHA05BTを買った]]></title>
    <link href="http://note.n6e.be//blog/2012/08/05/review-at-pha05bt/"/>
    <updated>2012-08-05T02:47:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/08/05/review-at-pha05bt</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/dp/B0087BQJUO/takuojp02-22/ref=nosim/" target="_blank"><img class="right" src="https://lh3.googleusercontent.com/-TJH6xcQYckw/UB1nCKMhbfI/AAAAAAAAKfI/KqD5AG8TbPE/s144/AT-BT05.jpeg"></a>
ソニエリのMW600を落っことして壊してしまったので、代替として<a href="http://www.audio-technica.co.jp/atj/show_model.php?modelId=1536">オーディオテクニカのAT-PHA05BT</a>を買ってみましたのでレビューです。<br/>
(買ったのはヘッドフォン付きのAT-BT05ですが)</p>

<!-- more -->


<p>まず、MW600の何がいけなかったのか。<br/>
これはもう散々言われていることなのですが、MW600にはホールド(ロック)機能がなく、ちょっとボタンに触れると操作が実行されてしまうという、大変デリケートな機器となっております。<br/>
また、音量キーがタッチセンサーになっており、これまた大変操作しづらい構造になっています。<br/>
その他の点については概ね良好でした。</p>

<p>さて、AT-PHA05BTはどうなのか。<br/>
まず外見から…<br/>
でかい。MWと比較した画像を載せますが、第一印象でかい、です。<br/>
まぁアンプも積んでいるようなのでこのサイズは妥当なのかも知れません。
<a href="https://lh3.googleusercontent.com/-HBpamj2pS2o/UB1S8xCqQFI/AAAAAAAAKdU/-HgGmZkLA6E/s800/DSC_0191.jpg" target="_blank"><img src="https://lh3.googleusercontent.com/-HBpamj2pS2o/UB1S8xCqQFI/AAAAAAAAKdU/-HgGmZkLA6E/s288/DSC_0191.jpg" title="大きさ比較" ></a></p>

<p>MW600で不満とされていた、ホールド機能はついています。<br/>
また音量キーもちゃんとしたボタンであります。<br/>
<a href="https://lh5.googleusercontent.com/-mCT9EjMy53g/UB1jRBbvw-I/AAAAAAAAKeU/V79agD7zV08/s800/DSC_0192.jpg" target="_blank"><img src="https://lh5.googleusercontent.com/-mCT9EjMy53g/UB1jRBbvw-I/AAAAAAAAKeU/V79agD7zV08/s288/DSC_0192.jpg"></a><br/>
ホールドと電源、左に見える□はストラップホール。</p>

<p><a href="https://lh4.googleusercontent.com/-4JRjqo3INUU/UB1jzvrE7bI/AAAAAAAAKes/KYACkGhpT-8/s800/DSC_0193.jpg" target="_blank"><img src="https://lh4.googleusercontent.com/-4JRjqo3INUU/UB1jzvrE7bI/AAAAAAAAKes/KYACkGhpT-8/s288/DSC_0193.jpg"></a><br/>
ミュージックコントロール関連のキー</p>

<p>その他優位な点としてはペアリング機器を8台まで記憶できる…(MW600は3台)というのがあるのですが、実はAT-PHA05BT側から接続する機器を選べる機能はなく、スマートフォンや携帯電話等ペアリングした相手側から接続をしなくてはなりません。<br/>
これの良し悪しは人に依りそうですが、MW600ではMW600側から機器を選択できました。</p>

<p>その他の機能はほぼMW600と同等なので特筆すべき点はありません。<br/>
強いて言えば、ペアリングボタンと充電用のUSBコネクタはカバーで覆われており、それらを使用する場合はカバーをはずさねばなりません。<br/>
<a href="https://lh5.googleusercontent.com/-HFhOkbEVlZ4/UB3vVhGRmlI/AAAAAAAAKf4/C-Xgx2c0JmA/s800/DSC_0194.jpg" target="_blank"><img src="https://lh5.googleusercontent.com/-HFhOkbEVlZ4/UB3vVhGRmlI/AAAAAAAAKf4/C-Xgx2c0JmA/s288/DSC_0194.jpg"></a></p>

<p>アンプ機能はそれこそ個人で受ける印象は違うでしょう。自分の場合はAndroidのイコライザで十分なので不要かもしれません。</p>

<p>デザイン性と大きさがちょっと不満ですが実用面には影響しないし、なにしろホールドができるので雑に扱っても誤操作しなくてよいです。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0065V9TXC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0087BQCHE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0087BQJUO" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B003N111Y2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nasne の HDDを1TBに換装]]></title>
    <link href="http://note.n6e.be//blog/2012/07/25/replacing-nasne-hdd-with-1tb/"/>
    <updated>2012-07-25T17:22:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/07/25/replacing-nasne-hdd-with-1tb</id>
    <content type="html"><![CDATA[<p><a href="http://note.n6e.be//blog/2012/07/21/replacing-hdd-of-nasne/">先日の記事</a>では詳細な換装方法を書きましたが、サンプルに古くて容量の小さいHDDを利用して実験したまででした。
今回、実際に新しい1TBのHDDを買ってきて実践しましたのでリポートです。</p>

<!-- more -->


<p>買ってきたのは東芝の2.5インチ1TB HDD(<a href="http://www.amazon.co.jp/dp/B007XCCTEI/ref=as_li_ss_til?tag=takuojp02-22&amp;camp=1027&amp;creative=7407&amp;linkCode=as4&amp;creativeASIN=B007XCCTEI&amp;adid=1K2S5CSEZ6C3GDTCVFP8&amp;&amp;ref-refURL=http%3A%2F%2Flocalhost%3A4000%2Fblog%2F2012%2F07%2F25%2Freplacing-nasne-hdd-with-1tb%2F">MQ01ABD100</a> 9.5mm厚)で7,489円でした。
USB接続のHDDケースは玄人志向の2.5インチ USB3.0接続(<a href="http://www.amazon.co.jp/dp/B007SQJ7LC/ref=as_li_ss_til?tag=takuojp02-22&amp;camp=1027&amp;creative=7407&amp;linkCode=as4&amp;creativeASIN=B007SQJ7LC&amp;adid=0KWAZQJ2F6T10GB9JCQ6&amp;&amp;ref-refURL=http%3A%2F%2Flocalhost%3A4000%2Fblog%2F2012%2F07%2F25%2Freplacing-nasne-hdd-with-1tb%2F">GW2.5TL-U3</a>)で980円と大変安いものです。ACアダプタがないものですが一時的にコピーするくらいにしか使わないので平気でしょう。</p>

<p>手順としては<a href="http://note.n6e.be//blog/2012/07/21/replacing-hdd-of-nasne/">先日の記事</a>どおりで、</p>

<p><strong>1. nasne から HDDをはずし、PCに接続して dd を使いイメージを取り出す (数分)</strong></p>

<pre><code># dd if=/dev/sdd of=nasne.img bs=512 count=2623488
</code></pre>

<p><strong>2. xfs 領域をマウントし、PCの適当なところに rsync -vaxXH でコピーする (一瞬)</strong></p>

<pre><code># mount -o ro /dev/sdd3 /mnt
# rsync -vaxXH /mnt/ /var/tmp/nasne-xfs
... (略)
# umount /mnt
</code></pre>

<p><strong>3. アンマウントしてUSBを外し、新しいHDDに入れ替え、イメージを書き込む (数分)</strong></p>

<pre><code># dd if=nasne.img of=/dev/sdd
</code></pre>

<p><strong>4. パーティションを編集(sdd3を作り直し)し、退避したxfs領域を rsync でコピーする (一瞬)</strong></p>

<pre><code># fdisk /dev/sdd
... (略)   
# mkfs.xfs -f /dev/sdd3
# mount /dev/sdd3 /mnt
# rsync -vaxXH /var/tmp/nasne-xfs/ /mnt/
... (略)
# umount /mnt
</code></pre>

<p><strong>5. HDDをPCから外し、nasne に装着して起動確認して組み立てる (数分)</strong></p>

<p>以上の工程すべてで15分ほどで終わりました。(起動も問題なく一発で行けました。前回はやはりHDDが古過ぎたのかもしれません、超遅いし。)<br/>
xfsを操作するのでどうしてもLinuxが必要になってしまいますが、HDDをまるごとコピーするやりかただと2時間から3時間ほどかかるようなので大幅な短縮と言えます。</p>

<p>蛇足ですが、nasne に外付けのUSB HDDを装着すると、録画データは先に外付けのHDDに保存されていくようです。<br/>
また、torneから参照するとnasneの空き容量は内蔵と外付けの合計値になっており、区別して保存先を指定するようなことはできないみたいです。</p>

<p>取り出したnasneのHDDが500GBで半端だし使い道がないなーと思いましたが、こないだ買ったPS3のHDDが160GBなのでこれと交換するのがいいかもしれません。今時160GBはゴミ同然と判断できるし切り捨てるにもよいでしょう…。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007V9T9ZK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007SQJ7LC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007XCCTEI" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nasne のHDDを時間かけずに換装する]]></title>
    <link href="http://note.n6e.be//blog/2012/07/21/replacing-hdd-of-nasne/"/>
    <updated>2012-07-21T02:00:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/07/21/replacing-hdd-of-nasne</id>
    <content type="html"><![CDATA[<p>HDDをまるごとバックアップして書き戻す作業は大変時間がかかるので、必要な分だけイメージを取得するようにして待ち時間を短縮します。<br/>
特別な機材は必要ありませんが、USBのHDDがケースがあると便利だと思います。<br/>
Linuxでの作業になるので多少のLinuxの知識が必要になります。</p>

<!-- more -->


<p>前提として作業はLinux上で行い、使うツールは dd, parted, fdisk, xfsprogs などです。<br/>
nasne の HDD は2.5インチの7mm厚ですが、構造的に換装するHDDは9.5mm厚でも問題ありません。<br/>
※  注意 : <strong>nasneのHDDにはハードウェア固有の情報が書き込まれており、別の個体では利用できません。</strong></p>

<p>まず nasne から HDD を取り外し、Linux PCに付けます。(USB HDDケースがあると便利)
nasne の HDD を <strong>/dev/sdd</strong> として認識したとします。<br/>
xfs の領域である <strong>/dev/sdd3</strong> をtar (rsync -aHxXとかでも可)でバックアップします。</p>

<pre><code># mount -o ro /dev/sdd3 /mnt
# cd /mnt
# tar -cpzf /backup/xfs.tgz .
# cd / &amp;&amp; umount /dev/sdd3
</code></pre>

<p>パーティション番号2までのサイズ(単位はセクタにする)をメモします。</p>

<pre><code># parted /dev/sdd
GNU Parted 2.3
Using /dev/sdd
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) unit s
(parted) p
Model: Hitachi HTS545050A7E380 (scsi)
Disk /dev/sdd: 62500864s
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start     End        Size       Type     File system  Flags
 1      2048s     526335s    524288s    primary  ext3         boot
 2      526336s   2623487s   2097152s   primary  ext3
 3      2623488s  62500863s  59877376s  primary  xfs

(parted) quit
</code></pre>

<p>セクタサイズは512Bで、 <strong>/dev/sdd2</strong> のEndが <strong>2623487</strong> であることがわかります。<br/>
dd で先頭から <strong>/dev/sdd2</strong> の終わりまでのイメージを取得します。<br/>
※ セクタ番号は0から始まるのでcountは1増やす。</p>

<pre><code># cd / &amp;&amp; umount /mnt
# dd if=/dev/sdd of=/backup/hdd.img bs=512 count=2623488
</code></pre>

<p>換装用の新しいディスクを接続します。 <strong>/dev/sde</strong> とします。 (今回は敢えて小さい120GBのHDDを使用してます) <br/>
ディスクイメージを書き込みます。</p>

<pre><code># dd if=/backup/hdd.img of=/dev/sde
</code></pre>

<p>または直接 /dev/sdd から /dev/sde に dd してもいいと思います。<br/>
イメージサイズは1GB程度なので大して時間はかかりません。</p>

<p>/dev/sde3 を消して作り直します。</p>

<pre><code># fdisk /dev/sde

Command (m for help): p

Disk /dev/sde: 120.0 GB, 120034123776 bytes
255 heads, 63 sectors/track, 14593 cylinders, total 234441648 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000d7605

   Device Boot      Start         End      Blocks   Id  System
/dev/sde1   *        2048      526335      262144   83  Linux
/dev/sde2          526336     2623487     1048576   83  Linux
/dev/sde3         2623488    62500863    29938688   83  Linux

Command (m for help): d
Partition number (1-4): 3

Command (m for help): p

Disk /dev/sde: 120.0 GB, 120034123776 bytes
255 heads, 63 sectors/track, 14593 cylinders, total 234441648 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000d7605

   Device Boot      Start         End      Blocks   Id  System
/dev/sde1   *        2048      526335      262144   83  Linux
/dev/sde2          526336     2623487     1048576   83  Linux

Command (m for help): n
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p): p
Partition number (1-4, default 3):
Using default value 3
First sector (2623488-234441647, default 2623488):
Using default value 2623488
Last sector, +sectors or +size{K,M,G} (2623488-234441647, default 234441647):
Using default value 234441647

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
</code></pre>

<p>xfsファイルシステムを作り直します。</p>

<pre><code># mkfs.xfs -f /dev/sde3
meta-data=/dev/sde3              isize=256    agcount=4, agsize=7244318 blks
         =                       sectsz=512   attr=2, projid32bit=0
data     =                       bsize=4096   blocks=28977270, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0
log      =internal log           bsize=4096   blocks=14149, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
</code></pre>

<p><strong>/dev/sde3</strong> をマウントしてtarでバックアップしたxfs領域を展開します。<br/>
(これやらなくても動きましたがやったほうがいい気がします)</p>

<pre><code># mount /dev/sde3 /mnt
# tar -xzpf /backup/xfs.tgz -C /mnt
# umount /mnt
</code></pre>

<p>ディスクを nasne に取り付けて起動します。
<img src="http://note.n6e.be//assets/screenshot/nasne-hdd-replace.png"></p>

<p>よくわかりませんが、起動時に電源LEDとREC LEDが両方赤点灯でフリーズすることがありました。<br/>
なんどか同じ手順をやり直していたら起動したりしなかったりしました。<br/>
サンプルにつかったHDD(HTS541612J9SA00)が古過ぎて調子が悪いのかもしれませんが、原因は定かではありません。</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007NTJWB4" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007XCCTEI" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B004QZAPMS" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0053VPYHK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007V9T9ZK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0035V5EA2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nasne のファイルシステムを見てみる]]></title>
    <link href="http://note.n6e.be//blog/2012/07/19/filesystem-of-nasne/"/>
    <updated>2012-07-19T22:52:00+09:00</updated>
    <id>http://note.n6e.be//blog/2012/07/19/filesystem-of-nasne</id>
    <content type="html"><![CDATA[<p>物理的な分解記事とかよりも面白いと思ったのでちょっとだけnasneの中身をみてました。</p>

<!-- more -->


<p>まずはパーティションの確認から。</p>

<pre><code># parted /dev/sdd
GNU Parted 2.3
Using /dev/sdd
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) print
Model: Hitachi HTS545050A7E380 (scsi)
Disk /dev/sdd: 500GB
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start   End     Size    Type     File system  Flags
 1      1049kB  269MB   268MB   primary  ext3         boot
 2      269MB   1343MB  1074MB  primary  ext3
 3      1343MB  500GB   499GB   primary  xfs
</code></pre>

<p>ほうほう。Linuxっぽい。xfsはきっと録画した実データ置き場ですね。<br/>
mount してみます。</p>

<pre><code># mount -o ro /dev/sdd1 /mnt/nasne/1
# mount -o ro /dev/sdd2 /mnt/nasne/2
# mount -o ro /dev/sdd3 /mnt/nasne/3
</code></pre>

<p>間違えて壊したくないので read-only でマウントしてます。</p>

<pre><code># cd /mnt/nasne
# find &gt; /tmp/nasne.fs.txt
</code></pre>

<p><a href="http://note.n6e.be//assets/nasne.fs.txt">nasne.fs.txt</a><br/>
telnetd とか samba とか興味深いですね。samba は3.0.37でした。<br/>
sbin,binなどにあるプログラムの実体はほぼ全てbusyboxです。</p>

<p>最初のパーティション(1)にboot関連(多分)のものが入っており、おそらくハードウェア個体に紐付けられてこのnasneでしか起動できないようになってます。<br/>
ファイルの中身は暗号化されており、わかりません。</p>

<p>この時点ですでに1番組録画してあるのですが、パーティション(3)にある録画データはちゃんと暗号化(きっとハード固有の鍵により)されております。</p>

<p>アーキテクチャを調べてみます。</p>

<pre><code># file 2/lib/libc-2.9.so
libc-2.9.so: ELF 32-bit LSB shared object, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, with unknown capability 0xf41 = 0x756e6700, with unknown capability 0x70100 = 0x1040000, not stripped
</code></pre>

<p>MIPSだそうです。</p>

<pre><code># cat 2/etc/issue
********************************************************************************
*              Welcome to Viper MIPS Linux :-)                                 *
********************************************************************************
</code></pre>

<p>ほうほう</p>

<pre><code># cat 2/etc/passwd
root::0:0:root:/root:/bin/sh
www:x:80:80:root:/www:/bin/sh
nobody:x:99:99:Nobody:/:/sbin/nologin
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
</code></pre>

<p>ははあ。rootのパスワードはないんですね。</p>

<pre><code># cat 2/etc/init.d/rcS
#!/bin/sh
trap "" SIGHUP
#echo "Mounting proc"
mount -t proc none /proc
#echo "Mounting usbfs"
mount -t usbfs none /proc/bus/usb
#echo "Mounting sysfs"
mount -t sysfs none /sys

#echo "Starting uevent daemon"
/usr/bin/uevent_daemon

#echo "Starting Udev"
start_udev

#echo "Mounting devpts"
mount -t devpts none /dev/pts

sysctl -p

#export HOSTNAME="nasne"
#echo "Setting hostname $HOSTNAME"
#hostname $HOSTNAME

#echo "Bringing up loopback device"
ifconfig lo 127.0.0.1 netmask 255.0.0.0 up
route add -net 127.0.0.0 netmask 255.0.0.0 dev lo

#echo "Bringing up Eth0"

# ---- for DTVTuner ----
/opt/dtvtuner/etc/startdtvtuner
</code></pre>

<p>なるほど。<br/>
ここでinetdとかtelnetdを起動するように変更すれば稼働中のnasneにログインできるかもしれません。</p>

<p>というわけで、別のHDDに換装するにはまるごとddしてコピーし、partedでxfsのパーティションを適当に大きくしたりすればよさそうです。<br/>
肝心のカーネルイメージが何処にあるのかわかりませんでした。</p>

<p><strong>(2012-07-20追記)</strong></p>

<p>実際に /usr/sbin/inetd を起動するように書いてみたのですが、どうやらinitramfsかそのへんの処理でどこかに存在するイメージの展開で / を再作成しているようで、編集前の状態に戻ってしまいます。</p>

<p>試しに dumpe2fs で / の状態を確認すると、</p>

<pre><code>Filesystem created:       Wed May 16 17:52:14 2012
Last mount time:          Thu Jan  1 09:00:05 1970
Last write time:          Thu Jan  1 09:00:05 1970
</code></pre>

<p>となっており、mkfsはされてない(初期化ではない)が、システムの起動直後にマウントされ、再作成されてるように思えます。<br/>
そこで、<strong>chattr +i {rootfs}/etc/init.d/rcS</strong> で書き込み禁止属性をつけ、rcSが書き戻されないようにしてから起動して見ましたが… 起動せず。<br/>
どうやら展開中のエラーで起動処理が止まってるのだと思われます。(<strong>chattr -i</strong> しなおしたらなおりました)</p>

<p>そんなわけで、簡単に好きなプログラムを走らせるようにはできておらず、もうひと工夫が必要そうです。(あるいはexploitを見つけるか)</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007V9T9ZK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0034KZXBO" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=takuojp02-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0035V5EA2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
</feed>
